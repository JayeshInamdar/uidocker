/*data "aws_ami" "windows_ami" {
  most_recent = true
  filter {
    name   = "name"
    values = [var.instance_configurations["web"].ami_name]
  }
  filter {
    name   = "owner-alias"
    values = ["amazon"]  # Assuming Amazon-owned AMI
  }
}

data "aws_subnets" "application" {
  filter {
    name   = "vpc-id"
    values = [var.vpc_id]
  }

  tags = {
    app = var.app_name

  }
}

resource "aws_instance" "app" {
  for_each      = toset(data.aws_subnets.private.ids)
  ami           = data.aws_ami.windows_ami.id
  instance_type = var.instance_type
  subnet_id     = each.value
  vpc_id                  = var.vpc_id
  availability_zone = var.availability_zones[count.index]

  tags = {
    Name = "Instance-${count.index + 1}"
  }
}

*/


# resource "aws_instance" "tier_instance" {
#   count        = var.instance_count
#   ami          = data.aws_ami.windows_ami.id
#   instance_type = var.instance_type
#   subnet_id    = var.subnet_id
#   vpc_id                  = var.vpc_id
#   availability_zone = var.availability_zones[count.index]

#   tags = {
#     Name = "Instance-${count.index + 1}"
#   }

#   // You can configure other settings here.
# }

resource "aws_instance" "app" {
  for_each            = var.instance_configurations[var.app_name]
  ami                 = data.aws_ami.windows_ami.id
  instance_type       = each.value.instance_type
  subnet_id           = var.subnet_id
  vpc_id              = var.vpc_id
  availability_zone   = each.value.availability_zone
  key_name            = each.value.key_name

  tags = {
    Name = "Instance-${each.key + 1}"
  }

  
}

data "aws_ami" "windows" {
  most_recent = true

  filter {
    name   = "name"
    values = ["ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-*"]
  }

  filter {
    name   = "virtualization-type"
    values = ["hvm"]
  }

  owners = ["095876105558"] # Canonical
}
